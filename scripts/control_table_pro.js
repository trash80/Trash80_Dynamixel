var protocol_properties = {
    MODEL_NUMBER : 0, //Model Number
    MODEL_INFORMATION : 2, //Model Information
    VERSION_OF_FIRMWARE : 6, //Information on the version of firmware
    ID : 7, //ID of Dynamixel
    BAUD_RATE : 8, //Baud Rate of Dynamixel
    RETURN_DELAY_TIME : 9, //Return Delay Time
    OPERATING_MODE : 11, //Operating mode
    HOMING_OFFSET : 13, //Homing offset
    MOVING_THRESHOLD : 17, //Moving threshold
    TEMPERATURE_LIMIT : 21, //Internal limit temperature
    MAX_VOLTAGE_LIMIT : 22, //Operating upper limit voltage
    MIN_VOLTAGE_LIMIT : 24, //Operating lower limit voltage
    ACCELERATION_LIMIT : 26, //acceleration Limit
    TORQUE_LIMIT : 30, //Torque limit
    VELOCITY_LIMIT : 32, //Velocity Limit
    MAX_POSITION_LIMIT : 36, //Position upper limit
    MIN_POSITION_LIMIT : 40, //Position lower limit
    EXTERNAL_PORT_MODE_1 : 44, //External Port Mode 1
    EXTERNAL_PORT_MODE_2 : 45, //External Port Mode 2
    EXTERNAL_PORT_MODE_3 : 46, //External Port Mode 3
    EXTERNAL_PORT_MODE_4 : 47, //External Port Mode 4
    SHUTDOWN : 48, //Shutdown
    TORQUE_ENABLE : 562, //Torque Enable on/off
    LED : 562, //RED LED intensity value
    LED_RED : 562, //RED LED intensity value
    LED_GREEN : 563, //GREEN LED intensity value
    LED_BLUE : 565, //BLUE LED intensity value
    VELOCITY_I_GAIN : 586, //Velocity I Gain
    VELOCITY_P_GAIN : 588, //Velocity P Gain
    POSITION_P_GAIN : 594, //Position P Gain
    GOAL_POSITION : 596, //Goal position
    GOAL_VELOCITY : 600, //Goal velocity
    GOAL_TORQUE : 604, //Goal Torque
    GOAL_ACCELERATION : 606, //Goal acceleration
    MOVING : 610, //Moving
    PRESENT_POSITION : 611, //Present position
    PRESENT_VELOCITY : 615, //Present velocity
    PRESENT_CURRENT : 621, //Present Current
    PRESENT_INPUT_VOLTAGE : 623, //Present input voltage
    PRESENT_TEMPERATURE : 625, //Present temperature
    EXTERNAL_PORT_DATA_1 : 626, //External Port Data 1
    EXTERNAL_PORT_DATA_2 : 628, //External Port Data 2
    EXTERNAL_PORT_DATA_3 : 630, //External Port Data 3
    EXTERNAL_PORT_DATA_4 : 632, //External Port Data 4
};

var protocol_sizes = {
    MODEL_NUMBER : 2, //Model Number
    MODEL_INFORMATION : 4, //Model Information
    VERSION_OF_FIRMWARE : 1, //Information on the version of firmware
    ID : 1, //ID of Dynamixel
    BAUD_RATE : 1, //Baud Rate of Dynamixel
    RETURN_DELAY_TIME : 1, //Return Delay Time
    OPERATING_MODE : 1, //Operating mode
    HOMING_OFFSET : 4, //Homing offset
    MOVING_THRESHOLD : 4, //Moving threshold
    TEMPERATURE_LIMIT : 1, //Internal limit temperature
    MAX_VOLTAGE_LIMIT : 2, //Operating upper limit voltage
    MIN_VOLTAGE_LIMIT : 2, //Operating lower limit voltage
    ACCELERATION_LIMIT : 4, //acceleration Limit
    TORQUE_LIMIT : 2, //Torque limit
    VELOCITY_LIMIT : 4, //Velocity Limit
    MAX_POSITION_LIMIT : 4, //Position upper limit
    MIN_POSITION_LIMIT : 4, //Position lower limit
    EXTERNAL_PORT_MODE_1 : 1, //External Port Mode 1
    EXTERNAL_PORT_MODE_2 : 1, //External Port Mode 2
    EXTERNAL_PORT_MODE_3 : 1, //External Port Mode 3
    EXTERNAL_PORT_MODE_4 : 1, //External Port Mode 4
    SHUTDOWN : 1, //Shutdown
    TORQUE_ENABLE : 1, //Torque Enable on/off
    LED : 1, //RED LED intensity value
    LED_RED : 1, //RED LED intensity value
    LED_GREEN : 1, //GREEN LED intensity value
    LED_BLUE : 1, //BLUE LED intensity value
    VELOCITY_I_GAIN : 2, //Velocity I Gain
    VELOCITY_P_GAIN : 2, //Velocity P Gain
    POSITION_P_GAIN : 2, //Position P Gain
    GOAL_POSITION : 4, //Goal position
    GOAL_VELOCITY : 4, //Goal velocity
    GOAL_TORQUE : 2, //Goal Torque
    GOAL_ACCELERATION : 4, //Goal acceleration
    MOVING : 1, //Moving
    PRESENT_POSITION : 4, //Present position
    PRESENT_VELOCITY : 4, //Present velocity
    PRESENT_CURRENT : 2, //Present Current
    PRESENT_INPUT_VOLTAGE : 2, //Present input voltage
    PRESENT_TEMPERATURE : 1, //Present temperature
    EXTERNAL_PORT_DATA_1 : 2, //External Port Data 1
    EXTERNAL_PORT_DATA_2 : 2, //External Port Data 2
    EXTERNAL_PORT_DATA_3 : 2, //External Port Data 3
    EXTERNAL_PORT_DATA_4 : 2, //External Port Data 4
    REGISTERED_INSTRUCTION : 1, //Registered Instruction
    STATUS_RETURN_LEVEL : 1, //Status Return Level
    HARDWARE_ERROR_STATUS : 1, //Hardware error status
};

function createMemoryMap()
{
    var output = "// Generated by control_table.js\nstatic const uint8_t memory_map[147] = {";

    for(var i=0;i<147;i++) {
        var hit = false;
        var size = 0;

        for (var key in protocol_properties) {
            if (!protocol_properties.hasOwnProperty(key)) continue;
            if(protocol_properties[key]%255 == i) {
                hit = true;
                size = protocol_sizes[key];
                break;
            }
        }
        output += size;
        if(i+1 < 147) output+=",";
    }
    output += '};';
    copy(output);
    console.log("Output copied to clipboard.");
    return output;
}

function createGettersAndSetters()
{
    var output = "// Generated by control_table.js\n";
    sizes = ['','8','16','','32'];
    getter = '';
    setter = '';
    console.log('okay');
    console.log(protocol_properties);
    for (var key in protocol_properties) {
        if (!protocol_properties.hasOwnProperty(key)) continue;
        var f = key.replace(/_/g,' ').replace(/\w\S*/g, function(txt){return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();}).replace(/ /g,'');
        var p = key.toLowerCase();
        getter += 'uint'+sizes[protocol_sizes[key]]+'_t get'+f+'(){ return getValue((uint16_t)'+key+', '+sizes[protocol_sizes[key]]/8+'); };'+"\n";
        setter += 'bool set'+f+'(uint'+sizes[protocol_sizes[key]]+'_t value){ return setValue('+key+', value); };'+"\n";
    }
    output = output+getter+setter;
    copy(output);
    console.log("Output copied to clipboard.");
    return output;
}
